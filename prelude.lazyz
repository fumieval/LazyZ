
-- basic functions
id = I;
const = K;
flip f x y = f y x;
(.) f g = \x -> f (g x);
fix f = f (fix f);

-- boolean operations
True = \x y -> x;
False = \x y -> y;
if p x y = p x y;
not p = if p False True;
and p q = if p q False;
or p q = if p True q;

-- list operations
(:) x y = \f -> f x y;
empty = \f -> True;
head list = list True;
tail list = list False;

null list = list (\x y -> False);
(!!) n list = head ((n tail) list);

listOf x = fix ((:) x);

(++) xs ys = if (null xs) ys ((:) (head xs) ((++) (tail xs) ys));

-- Church numerals
succ n = \f -> \x -> (f ((n f) x));
(+) n = n succ;
(*) a b = \f -> a (b f);
(^) a b = b a;
ifnonzero n x y = (n (const x)) y;

(==) a b = (!!) b ((a ((:) False)) ((:) True (listOf False)));
(!=) a b = (!!) b ((a ((:) True)) ((:) False (listOf True)));

ifle m n x y = (m (^) (const x)) (n (^) (const y));
ifgt m n x y = ifle m n y x;
ifge m n x y = ifle n m x y;
iflt m n x y = ifle n m y x;

-- miscellaneous
endofoutput = const 256;
